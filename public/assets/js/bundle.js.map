{"version":3,"sources":["webpack://crowdfunding/./src/scripts/Modal.js","webpack://crowdfunding/./src/scripts/FundHandler.js","webpack://crowdfunding/./src/scripts/FormHandler.js","webpack://crowdfunding/./src/scripts/UIHandler.js","webpack://crowdfunding/./src/scripts/CardsHandler.js","webpack://crowdfunding/./src/scripts/MenuHandler.js","webpack://crowdfunding/./src/scripts/ClickHandler.js","webpack://crowdfunding/./src/scripts/ScrollHandler.js","webpack://crowdfunding/./src/scripts/App.js","webpack://crowdfunding/./src/scripts/ScrollReveal.js","webpack://crowdfunding/./src/scripts/main.js"],"names":["modalWrapper","document","querySelector","completedPledgeModalWrapper","closeCompletedPledgeModalBtn","getElementById","modalNumberInputs","querySelectorAll","modalCards","closeOnEscape","e","key","Modal","close","classList","add","window","addEventListener","remove","removeEventListener","value","clearModalInputs","card","checked","resetModalCards","closeCompletedPledgeModal","fundStatus","totalPledgers","totalFund","fundOptions","name","remainingDonates","FundHandler","optionIndex","donateForm","modalRadioInputs","FormHandler","preventDefault","pledgeInput","rewardOptionSpan","pledgeValue","Number","Error","validateValue","rewardOption","dataset","option","getFundInfo","validateOption","App","error","alert","message","input","cardIndex","totalFundSpan","totalPledgersSpan","progressBar","UIHandler","fundInfo","progressBarWidth","Math","floor","innerText","toLocaleString","style","currency","width","span","cards","CardHandler","cardRadio","cardBtn","setAttribute","removeAttribute","menu","openMenuBtn","menuLinks","MenuHandler","closeMenuBtn","bookMarkBtn","ClickHandler","target","contains","open","bookmarkImg","bookmarkInfo","src","backToTopBtn","ScrollHandler","scrollY","ScrollReveal","origin","distance","duration","reset","reveal","interval","init"],"mappings":"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","file":"bundle.js","sourcesContent":["const modalWrapper = document.querySelector('.modal-wrapper.pledge-options');\nconst completedPledgeModalWrapper = document.querySelector(\n  '.modal-wrapper.completed-pledge'\n);\nconst closeCompletedPledgeModalBtn = document.getElementById(\n  'close-completed-pledge'\n);\nconst modalRadioInputs = document.querySelectorAll(`input[type='radio']`);\nconst modalNumberInputs = document.querySelectorAll(`input[type='number']`);\nconst modalCards = document.querySelectorAll('.modal .card');\nconst clearModalInputs = () => {\n  for (const input of modalNumberInputs) {\n    input.value = '';\n  }\n};\nconst resetModalCards = () => {\n  for (const card of modalCards) {\n    const radio = card.querySelector(`input[type='radio']`);\n    radio.checked = false;\n    card.classList.remove('selected');\n  }\n};\n\nconst closeOnEscape = e => {\n  const isEscape = e.key == 'Escape';\n\n  if (isEscape) return Modal.close();\n};\n\nexport class Modal {\n  static open() {\n    modalWrapper.classList.add('on');\n    window.addEventListener('keydown', closeOnEscape);\n  }\n\n  static close() {\n    modalWrapper.classList.remove('on');\n    window.removeEventListener('keydown', closeOnEscape);\n    clearModalInputs();\n    resetModalCards();\n  }\n\n  static openCompletedPledgeModal() {\n    completedPledgeModalWrapper.classList.add('on');\n    closeCompletedPledgeModalBtn.addEventListener(\n      'click',\n      Modal.closeCompletedPledgeModal\n    );\n  }\n\n  static closeCompletedPledgeModal() {\n    completedPledgeModalWrapper.classList.remove('on');\n    closeCompletedPledgeModalBtn.removeEventListener(\n      'click',\n      Modal.closeCompletedPledgeModal\n    );\n  }\n}\n","const fundStatus = {\n  totalPledgers: 0,\n  totalFund: 0,\n  fundOptions: [\n    {\n      name: 'Suporte de Bambu',\n      remainingDonates: 150\n    },\n    {\n      name: 'Suporte Black Edition',\n      remainingDonates: 100\n    }\n  ]\n};\n\nexport class FundHandler {\n  static getFundInfo() {\n    return {\n      ...fundStatus\n    };\n  }\n\n  static updateTotalPledgers() {\n    fundStatus.totalPledgers += 1;\n  }\n\n  static updateTotalFund(value) {\n    fundStatus.totalFund += value;\n  }\n\n  static updateFundOptions(optionIndex) {\n    fundStatus.fundOptions[optionIndex].remainingDonates -= 1;\n  }\n}\n","import { Modal } from './Modal.js';\nimport { FundHandler } from './FundHandler.js';\nimport { App } from './App.js';\n\nconst donateForm = document.getElementById('donate-form');\nconst modalRadioInputs = document.querySelectorAll(`input[type='radio']`);\nconst modalNumberInputs = document.querySelectorAll(`input[type='number']`);\nconst modalCards = document.querySelectorAll('.modal .card');\nconst clearModalInputs = () => {\n  for (const input of modalNumberInputs) {\n    input.value = '';\n  }\n};\n\nconst validateValue = value => {\n  if (!value) throw new Error('Valor inválido. Por favor, tente novamente.');\n};\n\nconst validateOption = optionIndex => {\n  const fundInfo = FundHandler.getFundInfo();\n  const fundOption = fundInfo.fundOptions[optionIndex];\n\n  if (fundOption.remainingDonates == 0)\n    throw new Error('Número limite de doações para esta opção atingido.');\n};\n\nexport class FormHandler {\n  static handleSubmit() {\n    donateForm.addEventListener('submit', e => {\n      e.preventDefault();\n\n      try {\n        const pledgeInput = document.querySelector(\n          `.modal .card.selected input[type='number']`\n        );\n        const rewardOptionSpan = document.querySelector(\n          `.modal .card.selected .total-remaining span`\n        );\n        const pledgeValue = Number(pledgeInput.value);\n\n        validateValue(pledgeValue);\n\n        if (rewardOptionSpan) {\n          const rewardOption = rewardOptionSpan.dataset.option;\n          validateOption(rewardOption);\n          FundHandler.updateFundOptions(rewardOption);\n        }\n\n        FundHandler.updateTotalPledgers();\n        FundHandler.updateTotalFund(pledgeValue);\n        Modal.close();\n        Modal.openCompletedPledgeModal();\n        App.reload();\n      } catch (error) {\n        alert(error.message);\n      }\n    });\n  }\n\n  static handleCardSelection() {\n    for (const input of modalRadioInputs) {\n      const cardIndex = Number(input.dataset.card);\n\n      input.addEventListener('change', e => {\n        clearModalInputs();\n\n        for (const card of modalCards) {\n          card.dataset.card == cardIndex\n            ? card.classList.add('selected')\n            : card.classList.remove('selected');\n        }\n      });\n    }\n  }\n}\n","import { FundHandler } from './FundHandler.js';\n\nconst totalFundSpan = document.getElementById('total-fund');\nconst totalPledgersSpan = document.getElementById('total-pledgers');\nconst progressBar = document.querySelector('.progress-bar');\n\nexport class UIHandler {\n  static updateFundInfo() {\n    const fundInfo = FundHandler.getFundInfo();\n    const progressBarWidth = Math.floor((fundInfo.totalFund * 100) / 100000);\n\n    totalFundSpan.innerText = fundInfo.totalFund.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n    totalPledgersSpan.innerText = fundInfo.totalPledgers;\n\n    progressBar.style.width =\n      progressBarWidth >= 100 ? '100%' : `${progressBarWidth}%`;\n  }\n\n  static updateOptionsRemainingDonates() {\n    const fundInfo = FundHandler.getFundInfo();\n    const remainingDonatesSpans =\n      document.querySelectorAll('.remaining-donates');\n\n    for (const span of remainingDonatesSpans) {\n      const optionIndex = span.dataset.option;\n\n      span.innerText = fundInfo.fundOptions[optionIndex].remainingDonates;\n    }\n  }\n}\n","import { FundHandler } from './FundHandler.js';\n\nconst cards = document.querySelectorAll('.card.non-static');\n\nexport class CardHandler {\n  static checkOptionState() {\n    const fundInfo = FundHandler.getFundInfo();\n\n    for (const card of cards) {\n      const cardRadio = card.querySelector('input[type=\"radio\"');\n      const cardBtn = card.querySelector('button');\n      const optionIndex = Number(card.dataset.option);\n      const isOutOfStock =\n        fundInfo.fundOptions[optionIndex].remainingDonates == 0;\n\n      if (isOutOfStock) {\n        card.classList.add('out-of-stock');\n        cardBtn.setAttribute('disabled', 'disabled');\n\n        if (cardRadio) cardRadio.setAttribute('disabled', 'disabled');\n        return;\n      }\n\n      card.classList.remove('out-of-stock');\n      cardBtn.removeAttribute('disabled');\n\n      if (cardRadio) cardRadio.removeAttribute('disabled');\n    }\n  }\n}\n","const menu = document.querySelector('#page-header nav .menu');\nconst openMenuBtn = document.getElementById('open-menu');\nconst closeMenuBtn = document.getElementById('close-menu');\nconst menuLinks = menu.querySelectorAll('ul li a');\n\nexport class MenuHandler {\n  static open() {\n    menu.classList.add('show');\n    openMenuBtn.classList.add('hide');\n    for (const link of menuLinks) {\n      link.addEventListener('click', MenuHandler.close);\n    }\n  }\n\n  static close() {\n    menu.classList.remove('show');\n    openMenuBtn.classList.remove('hide');\n    for (const link of menuLinks) {\n      link.removeEventListener('click', MenuHandler.close);\n    }\n  }\n}\n","import { MenuHandler } from './MenuHandler.js';\nimport { Modal } from './Modal.js';\n\nconst openMenuBtn = document.getElementById('open-menu');\nconst closeMenuBtn = document.getElementById('close-menu');\nconst bookMarkBtn = document.getElementById('bookmark-project');\n\nconst handleBookmark = () => {\n  bookMarkBtn.addEventListener('click', e => {\n    e.preventDefault();\n\n    const bookmarkImg = bookMarkBtn.querySelector('img');\n    const bookmarkInfo = bookMarkBtn.querySelector('span');\n\n    if (bookMarkBtn.classList.contains('bookmarked')) {\n      bookMarkBtn.classList.remove('bookmarked');\n      bookmarkImg.src = './assets/images/icon-bookmark.svg';\n      bookmarkInfo.innerText = 'Marcar';\n      return;\n    }\n\n    bookMarkBtn.classList.add('bookmarked');\n    bookmarkImg.src = './assets/images/icon-bookmarked.svg';\n    bookmarkInfo.innerText = 'Marcado';\n  });\n};\n\nexport class ClickHandler {\n  static handleClicks() {\n    window.addEventListener('click', e => {\n      const target = e.target;\n\n      if (target.classList.contains('open-modal')) return Modal.open();\n      if (target.classList.contains('close-modal')) return Modal.close();\n      if (target == openMenuBtn) return MenuHandler.open();\n      if (target == closeMenuBtn) return MenuHandler.close();\n    });\n    handleBookmark();\n  }\n}\n","const backToTopBtn = document.querySelector('.back-to-top');\n\nconst handleBackToTopBtn = () => {\n  const scrollY = window.scrollY;\n\n  if (scrollY >= 200) return backToTopBtn.classList.add('show');\n  return backToTopBtn.classList.remove('show');\n};\n\nexport class ScrollHandler {\n  static handleScroll() {\n    window.addEventListener('scroll', e => {\n      handleBackToTopBtn(e);\n    });\n  }\n}\n","import { FormHandler } from './FormHandler.js';\nimport { UIHandler } from './UIHandler.js';\nimport { CardHandler } from './CardsHandler.js';\nimport { ClickHandler } from './ClickHandler.js';\nimport { ScrollHandler } from './ScrollHandler.js';\n\nexport class App {\n  static init() {\n    UIHandler.updateFundInfo();\n    UIHandler.updateOptionsRemainingDonates();\n    CardHandler.checkOptionState();\n    FormHandler.handleCardSelection();\n    FormHandler.handleSubmit();\n    ClickHandler.handleClicks();\n    ScrollHandler.handleScroll();\n  }\n\n  static reload() {\n    UIHandler.updateFundInfo();\n    UIHandler.updateOptionsRemainingDonates();\n    CardHandler.checkOptionState();\n  }\n}\n","const scrollReveal = ScrollReveal({\n  origin: 'top',\n  distance: '30px',\n  duration: 700,\n  reset: true\n});\n\nscrollReveal.reveal(\n  `#product-info h3, #product-info p, #product-info .btn-group,\n  #fund-info .text-container .text,\n  #fund-options header h2, #fund-options header p, #fund-options .card`,\n  { interval: 100 }\n);\n\nexport { scrollReveal };\n","import { App } from './App.js';\nimport { scrollReveal } from './ScrollReveal.js';\n\nApp.init();\n"],"sourceRoot":""}